/** 
.output-section => parent element
  |   => child elements
  |__ .path || #path-display
  |__ .output-area
  |__ .copy
**/

/** Output display container **/
.output-section {
    flex: 3;
    margin: 20px;
    padding: 20px;
    background-color: #f7f7f7;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    height: 80vh;
    width: 40vw;
  }

  /* Responsive Styles */
  @media (max-width: 1200px) {
    .output-section {
      flex: 2;
    }
  }
  
  @media (max-width: 900px) {
    .output-section {
      flex: 1;
      margin: 20px 0;
      width: 90vw;

    }
  }
  
/** Output display container ---------**/

/** Display's formatted json to desired format**/
.output-area {
    font-family: monospace;
    /* Ensures that text will wrap, respecting spaces */
    white-space: pre-wrap;
    /* Allows breaking long words or strings */      
    word-wrap: break-word;    
    padding: 10px;
    font-size: 14px;
    color: #333;
    /* Ensures the width is 100% of the parent container */
    width: 100%;
    height: 100%;  
    /* Breaks long words if necessary */          
    overflow-wrap: break-word;   
    word-break: break-all;
    font-size: 16px;
    text-align: left;
    background-color: white;
    overflow-y: auto;
    position: relative;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

  /* Responsive Styles */
  @media (max-width: 1200px) {
    .output-area {
      height: 68vh;
    }
  }
  
  @media (max-width: 900px) {
    .output-area {
      height: 80vh;
    }
  }
  
  @media (max-width: 600px) {
    .output-area {
      height: 80vh;
      width: 84vw;
    }
  }

/** Display path of json root **/
.path {
    margin-top: -10px;
    font-size: 16px;
    background-color: #ebebeb;
    z-index: 1;
    /* Prevent text from wrapping to a new line */
    white-space: nowrap; 
    /* Hide the overflowing text */  
    overflow: hidden;  
    /* Add "..." at the end of the visible text */    
    text-overflow: ellipsis; 
     /* Set the text direction to right-to-left */
    direction: ltr;
    /* Ensure the text aligns to the left */       
    text-align: left;      
}
.path:hover {
    color: #6495ED;
    cursor: pointer;
    text-decoration: underline;
}
.path:hover::after {
    content: "   âŽ˜: copy";
    font-size: 14px;
    color: #333;
}
/** For other formats except table, path won't be displayed **/
.path-none {
    display: none;
}

/** Copy element, displayed in the right corner of the output, to copy the text **/
.copy {
    cursor: pointer; 
    /* position: absolute; */
    right: 5;
    font-size: 30px;
    color: black;
    font-weight: 600;
    position: sticky;
    top: 0;  /* Sticks at the top */
    z-index: 100;  /* Optional */
    float: right;
}
/** on hover effects, it adds the text "copy" before the element when hover **/
.copy:hover:before {
   content: "copy";
   font-size: 14px;
   font-weight: 100;
   color: #6495ED;
}
